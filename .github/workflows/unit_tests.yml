name: Unit Tests

on:
  pull_request:
    branches: ["*"]

jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      SITE_URL: http://128.0.0.1:8000
      LANG: en_US.UTF-8
      LC_ALL: en_US.UTF-8

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python 3.13.7
        uses: actions/setup-python@v5
        with:
          python-version: 3.13.7

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.1.3
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install Python dependencies
        run: poetry install

      - name: Check and fix code formatting
        id: format
        run: |
          # Check if formatting is needed
          if ! python scripts/format_code.py --check; then
            echo "Code formatting issues found. Fixing..."
            python scripts/format_code.py
            
            # Check if there are changes to commit
            if ! git diff --quiet; then
              echo "formatting_changed=true" >> $GITHUB_OUTPUT
              git config --local user.email "action@github.com"
              git config --local user.name "GitHub Action"
              git add .
              git commit -m "Auto-format code with Ruff

              Automatically formatted Python code to ensure consistency.
              This commit was created by the CI/CD pipeline."
            else
              echo "formatting_changed=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "Code formatting is already correct."
            echo "formatting_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Push formatting changes
        if: steps.format.outputs.formatting_changed == 'true'
        run: |
          git push origin HEAD:${{ github.head_ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install npm dependencies
        run: npm ci

      - name: Run JavaScript tests
        run: npm test

      - name: Setup Site
        run: |
          chmod +x ./scripts/build_site.sh
          ./scripts/build_site.sh

      - name: Run tests
        run: poetry run pytest