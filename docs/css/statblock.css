.stat-block {
    position: relative;

    color: var(--fg-color);
    background-color: var(--bg-color);
    background: var(--bg-color);

    padding: var(--big-margin);
    margin-bottom: calc(2 *var(--big-margin));

    border: 1px solid var(--tertiary-color);
    border-radius: var(--medium-margin);
    outline: 1px solid var(--tertiary-color);
    outline-offset: -4px;
    box-shadow: 0 5px 8px 0 var(--box-shadow-color);

    font-family: var(--primary-font);
    font-size: var(--primary-font-size);
    columns: var(--column-size) 2;
}

.stat-block .stat-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 1em;
    position: relative;
    column-span: all;
}

.stat-block .monster-name {
    display: inline;
    overflow-wrap: break-word;

    color: var(--primary-color);
    font-family: var(--stylistic-font);
    font-size: var(--stylistic-font-size);
    column-span: all;
}

.stat-block .monster-name:after {
    content: "";
    display: block;
    width: 100%;
    margin: 2px auto var(--medium-margin);
    height: var(--header-border-width);
    background: var(--primary-color);
    column-span: all
}

.stat-block .branding {
    position: absolute;
    right: var(--big-margin);
    top: var(--big-margin);
    display: flex;
    align-items: center;
    gap: 0.4em;
    font-family: var(--primary-font);
    font-size: var(--primary-font-size);
    font-style: italic;
    color: var(--fg-color);
    opacity: 0.9;
    white-space: nowrap;
}

@media screen and (max-width: 500px) {
    .stat-block .branding {
        display: none;
    }
}

.stat-block .branding a {
    color: var(--fg-color);
    text-decoration: none;
    font-size: var(--primary-font-size);
}

.stat-block .branding img {
    height: 2.5em;
    width: auto;
}

.stat-block .monster-header {
    color: var(--primary-color);
    border-bottom: var(--header-border-width) solid var(--primary-color);

    font-family: var(--header-font);
    font-weight: bold;
    font-size: var(--header-font-size);
    letter-spacing: .35px;

    padding-top: var(--small-margin);
    margin-top: var(--small-margin);
    margin-bottom: var(--small-margin);
}

.stat-block .monster-header+p {
    break-before: avoid
}

.stat-block p {
    break-inside: avoid;
    font-size: var(--primary-font-size);
    line-height: var(--primary-line-height);
    text-wrap: pretty;
    margin-bottom: var(--medium-margin);
    margin-top: 0;
}

.stat-block p.creature-type {
    margin-top: 0;
    font-style: italic;
    opacity: .8
}

.stat-block :is(ol, ul, dl) {
    margin-bottom: 0;
    padding-top: 0;
    font-size: var(--primary-font-size);
    line-height: var(--primary-line-height);
}

.stat-block :is(ol, ul, dl) li {
    margin: 8px 0 0 6px;
    break-inside: avoid
}

.stat-block .stats {
    display: flex;
    gap: var(--medium-margin);
}

.stat-block .stats+p {
    margin-top: var(--medium-margin);
}

.stat-block .stats .table-overflow-wrapper {
    flex: 1 1 auto
}

.stat-block .stats table.abilities-saves {
    flex: 1 1 auto;
    line-height: var(--stats-line-height);
    background: revert;
    border: none;
    font-size: var(--stats-font-size);
    break-inside: avoid
}

.stat-block .stats table.abilities-saves thead tr th {
    padding: 5px 2px 0 !important;
    background: inherit;
    color: inherit;
    vertical-align: bottom;
    border: none;
    text-transform: uppercase;
    font-weight: bold;
    font-size: var(--stats-font-size);
}

.stat-block .stats table {
    max-width: 300px;
}

.stat-block .table td,
.stat-block .table th {
    color: inherit;
    border: none;
    background: inherit;
}

.stat-block .stats table.abilities-saves tbody {
    border: none
}

.stat-block .stats table.abilities-saves tbody th {
    text-transform: uppercase;
    font-weight: bold;
    border: none;
    padding-left: var(--small-margin);
    font-size: var(--stats-font-size);
}

.stat-block .stats table.abilities-saves tbody td {
    min-width: revert;
    padding: var(--small-margin) var(--medium-margin) !important;
    border: none;
    font-size: var(--stats-font-size);
}

.stat-block .stats table.abilities-saves tr :is(th, td) {
    transition: .3s
}

.stat-block p:nth-of-type(2) strong+strong {
    margin-left: 30px
}

/* Gylph Animation */
@keyframes shimmer {
    0% {
        opacity: 0.1;
    }

    50% {
        opacity: 0.5;
    }

    100% {
        opacity: 0.1;
    }
}

/* Top-left glyph */
.stat-block::before {
    content: "ᚠ";
    font-size: 2em;
    color: var(--tertiary-color);
    opacity: 0.5;
    position: absolute;
    top: -0.5em;
    left: -0.5em;
    pointer-events: none;
    animation: shimmer 12s infinite ease-in-out;
}

/* Bottom-right glyph */
.stat-block::after {
    content: "ᛃ";
    font-size: 2em;
    color: var(--tertiary-color);
    opacity: 0.5;
    position: absolute;
    bottom: -0.5em;
    right: -0.5em;
    pointer-events: none;
    animation: shimmer 10s infinite ease-in-out;
    animation-delay: 2s;
}

/* Styles for Pop Out / In when rerolling */


@keyframes pop-out {
    from {
        transform: scale(1);
        opacity: 1;
    }

    to {
        transform: scale(0.95);
        opacity: 0;
    }
}

@keyframes pop-in {
    from {
        transform: scale(1.05);
        opacity: 0;
    }

    to {
        transform: scale(1);
        opacity: 1;
    }
}

.stat-block.pop-out {
    animation: pop-out 0.2s forwards;
}

.stat-block.pop-in {
    animation: pop-in 0.2s forwards;
}

@keyframes summon-flash {
    0% {
        box-shadow: 0 0 0 0 var(--primary-color);
    }

    10% {
        box-shadow: 0 0 4px 1px var(--primary-color);
    }

    30% {
        box-shadow: 0 0 8px 3px var(--primary-color);
    }

    50% {
        box-shadow: 0 0 12px 6px var(--primary-color);
    }

    70% {
        box-shadow: 0 0 8px 3px var(--primary-color);
    }

    90% {
        box-shadow: 0 0 4px 1px var(--primary-color);
    }

    100% {
        box-shadow: 0 0 0 0 var(--primary-color);
    }
}

@keyframes scale-throb {
    0% {
        transform: scale(1);
    }

    40% {
        transform: scale(1.025);
    }

    60% {
        transform: scale(1.015);
    }

    100% {
        transform: scale(1);
    }
}

@keyframes summon-fade {

    0%,
    100% {
        opacity: 1;
        filter: brightness(1);
    }

    50% {
        opacity: 0.8;
        filter: brightness(1.3);
    }
}

.stat-block.summon-effect {
    animation:
        summon-flash 0.4s ease,
        scale-throb 0.4s ease,
        summon-fade 0.4s ease;
}


/* Begin Styles for Reroll Button */


.statblock-wrapper {
    position: relative;
}

/* Large screens: float to the right */
.reroll-button {
    position: absolute;
    top: -0.5rem;
    right: -4rem;
    font-size: 3rem;
    background-color: unset;
    border: none;
    color: var(--fg-color);
}

.d20-icon {
    width: 3rem;
    height: 3rem;
    fill: var(--fg-color);
}

/* On small screens: stack below */
@media (max-width: 600px) {
    .reroll-button {
        position: static;
        display: block;
        margin: 1rem auto 0 auto;
    }

    .statblock-wrapper {
        display: flex;
        flex-direction: column;
        align-items: center;
    }
}



.reroll-button:disabled {
    color: inherit;
}

.reroll-button.rolling {
    animation: roll-dice 1.4s cubic-bezier(0.4, 0, 0.2, 1);
    /* default Material Design easing */
}

@keyframes roll-dice {
    0% {
        transform: rotate(0deg) scale(1);
    }

    50% {
        transform: rotate(720deg) scale(1.2);
        /* 2 full spins */
    }

    70% {
        transform: rotate(720deg) scale(0.95);
        /* squish bounce */
    }

    85% {
        transform: rotate(720deg) scale(1.05) translateX(-2px);
    }

    95% {
        transform: rotate(720deg) scale(1.02) translateX(2px);
    }

    100% {
        transform: rotate(720deg) scale(1) translateX(0);
    }
}

/* Hover effect: glow + gentle jiggle */
.reroll-button:hover .d20-icon {
    filter: drop-shadow(0 0 5px var(--box-shadow-color));
    animation: jiggle 0.6s cubic-bezier(0.4, 0, 0.2, 1) 1;
}

@keyframes jiggle {
    0% {
        transform: rotate(0deg) translateX(0);
    }

    25% {
        transform: rotate(1.5deg) translateX(1px);
    }

    50% {
        transform: rotate(0deg) translateX(0);
    }

    75% {
        transform: rotate(-1.5deg) translateX(-1px);
    }

    100% {
        transform: rotate(0deg) translateX(0);
    }
}